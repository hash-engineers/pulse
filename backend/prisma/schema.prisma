generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ERole {
  USER
  ADMIN
  SUPER_ADMIN
}

enum ECompanySize {
  JUST__ME
  ONE__TO__FIVE
  SIX__TO__TEN
  ELEVEN__TO__TWENTY
  TWENTY_ONE__TO__FIFTY
  FIFTY_ONE__TO__HUNDRED
  ONE_HUNDRED_ONE__TO__FIVE_HUNDRED
  FIVE_HUNDRED_ONE__TO__ONE_THOUSAND
  ONE_THOUSAND_ONE__TO__TWO_THOUSAND
  TWO_THOUSAN_PLUS
}

model User {
  id String @id @default(cuid())

  name  String
  email String @unique
  role  ERole? @default(USER)

  companyName String
  company     Company @relation(fields: [companyName], references: [name], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Company {
  name String       @unique
  size ECompanySize

  members  User[]
  monitors Monitor[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("companies")
}

model Monitor {
  url      String @unique
  status   Int
  downtime Float

  incidents Incident[]

  company Company @relation(fields: [url], references: [name], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("monitors")
}

model Incident {
  id String @id @default(cuid())

  status Int

  monitorId String
  Monitor   Monitor @relation(fields: [monitorId], references: [url], onDelete: Cascade)

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  resolvedAt DateTime

  @@map("incidents")
}
